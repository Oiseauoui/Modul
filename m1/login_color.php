
<?php
$arr = array('red', 'green', 'blue', 'yellow', 'orange');
$rand_key = array_rand($arr);
$color = $arr[$rand_key];
?>

<form  action=''   method='POST'>

    <h3>Выберите  цвет:</h3>
    <select  name='colors'>
        <option <?php if(isset($_POST['colors']) && $_POST['colors'] =='red'){echo "selected='selected'";}?>  value="red">Красный</option>
        <option  value='blue'>Синий</option>
        <option  value='green'>Зеленый</option>
    </select>

    <input   type='submit'      value='ok' />

</form>
<?php

$color = $_POST['colors'];

echo "<p style='color: $color;'>Hello World 
<p>
    Введение

Объектно-ориентированное программирование (ООП) - это подход к
программированию, который использует объекты для взаимосвязи между
 компонентами системы при построении приложений.

Одним из основных преимуществ ООП перед структурным
программированием является совмещение
данных и функционала, что позволяет работать с объектами,
 суть которых максимально приближена к аналогичным объектам из реального мира.

Основные парадигмы объектно-ориентированного
 подхода это:

Инкапсуляция (encapsulation)
Наследование (inheritance)
Полиморфизм (polymorphism)
Инкапсуляция позволяет скрыть внутреннюю реализацию
объекта, что делает API для работы с объектами понятным и неизбыточным.

Наследование позволяет строить иерархии объектов,
в которых производные классы наследуют данные и поведение классов-предков.

Полиморфизм добавляет общность при работе с наборами
однотипных объектов. Он позволяет работать с этими объектами в унифицированной манере, при этом поведение объектов может различаться.
</p>


</p>";
?>



